# I wanted to have a CSV with the playlists that I have on Youtube and it I was lazy to do it by hand, so I automated the process
# With this code I can use OAuth for authentication  and then create a CSV file with one of my desired playlists
# In this example I am getting the liked videos from my youtube channel

from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
import os
import pickle
import csv

credentials = None

# token.pickle stores the user's credentials from previously successful logins
if os.path.exists('token.pickle'):
    print('Loading Credentials From File...')
    with open('token.pickle', 'rb') as token:
        credentials = pickle.load(token)



# If there are no valid credentials available, then either refresh the token or log in.
if not credentials or not credentials.valid:
    if credentials and credentials.expired and credentials.refresh_token:
        print('Refreshing Access Token...')
        credentials.refresh(Request())
    else:
        print('Fetching New Tokens...')
        flow = InstalledAppFlow.from_client_secrets_file(
            'client_secret.json',
            scopes=[
                'https://www.googleapis.com/auth/youtube.readonly'
            ]
        )

        flow.run_local_server(port=8080, prompt='consent',
                              authorization_prompt_message='')
        
        credentials = flow.credentials

        # Save the credentials for the next run
        with open('token.pickle', 'wb') as f:
            print('Saving Credentials for Future Use...')
            pickle.dump(credentials, f)


youtube = build('youtube', 'v3', credentials = credentials)


nextPageToken = None

# Open the CSV file
with open('liked_videos.csv', 'w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    # Write the header
    writer.writerow(['Title', 'Channel', 'URL'])
    
    while True:
        request = youtube.videos().list(
            part="snippet,contentDetails,statistics",
            myRating="like",
            pageToken=nextPageToken
        )
        response = request.execute()

        for item in response['items']:
            # Write the data to the CSV file
            writer.writerow([item['snippet']['title'], item['snippet']['channelTitle'], 'https://www.youtube.com/watch?v=' + item['id']])
        
        nextPageToken = response.get('nextPageToken')
        
        if not nextPageToken:
            break
